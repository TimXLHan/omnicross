apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.statefulset.name }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.app.name }} # has to match .spec.template.metadata.labels
  serviceName: {{ .Values.service.name | quote }}
  replicas: {{ .Values.statefulset.replicas }} # by default is 1
  minReadySeconds: 0 # by default is 0
  template:
    metadata:
      labels:
        app: {{ .Values.app.name }} # has to match .spec.selector.matchLabels
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      ### RSM container
      - name: rsm
        image: {{ .Values.werf.image.omnicrossrsm }}
        ports:
        - containerPort: {{ .Values.port.container.rsm.value }}
          name: {{ .Values.port.container.rsm.name }}
        env:
        # Turn on RUNNING_IN_K8S_ENV
        - name: RUNNING_IN_K8S_ENV
          value: "true"

        # Port for the container
        - name: PORT
          value: {{ .Values.port.container.rsm.value | quote }}

        # Specify the pod name of the given pod
        - name: PODNAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name

        # Specify the namespace
        - name: NAMESPACE 
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace

        # Specify how the relpica services are named
        - name: SERVICENAME
          value: {{ .Values.service.name | quote }}

        # Specify how the relpica services are named
        - name: STATEFULSETNAME
          value: {{ .Values.statefulset.name | quote }}

        # Specify how many replicas we have
        - name: REPLICAS
          value: {{ .Values.statefulset.replicas | quote }}
      ### Application container
      - name: app
        image: {{ .Values.werf.image.omnicrossapp }}
        ports:
        - containerPort: {{ .Values.port.container.app.value }}
          name: {{ .Values.port.container.app.name }}
        env:
        # Turn on RUNNING_IN_K8S_ENV
        - name: RUNNING_IN_K8S_ENV
          value: "true"

        # Port for the container
        - name: PORT
          value: {{ .Values.port.container.app.value | quote }}

        # Port for where to reach the rsm
        - name: RSM_PORT
          value: {{ .Values.port.container.rsm.value | quote }}

        # Specify the pod name of the given pod
        - name: PODNAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.service.name }}
  labels:
    app: {{ .Values.service.name }}
spec:
  ports:
  - port: {{ .Values.port.container.rsm.value }}
    name: {{ .Values.port.container.rsm.name }}
  - port: {{ .Values.port.container.app.value }}
    name: {{ .Values.port.container.app.name }}
  clusterIP: None
  selector:
    app: {{ .Values.app.name }}